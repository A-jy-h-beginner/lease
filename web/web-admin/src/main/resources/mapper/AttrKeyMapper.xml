<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.lease.web.admin.mapper.AttrKeyMapper">
    <resultMap id="AttrKeyVoMap" type="com.atguigu.lease.web.admin.vo.attr.AttrKeyVo"> <!-- autoMapping="true"可省去简单类型的配置 -->
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <collection property="attrValueList" ofType="com.atguigu.lease.model.entity.AttrValue">
            <id property="id" column="attr_value_id"></id>
            <result property="name" column="attr_value_name"></result>
            <result property="attrKeyId" column="attr_key_id"></result>
        </collection>
    </resultMap>

    <select id="listAttrInfo" resultMap="AttrKeyVoMap">
        select k.id,
               k.name,
               v.id as attr_value_id,
               v.name as attr_value_name,
               v.attr_key_id
        from attr_key k
                 left join attr_value v
                      on k.id = v.attr_key_id and v.is_deleted = 0
        where k.is_deleted = 0
    </select><!-- 用（inner）join相当于where会出现过滤右表匹配不到的左字段
    left join就算右表匹配不到也保留左字段 用left join时where只能包括左表的条件
     and 右表条件写在where前-->
    <!--可以先mp把两个结果查到之后在拼成vo类型,没有这么复杂-->
</mapper>
